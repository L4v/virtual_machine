#include <stdio.h>
#include <stdlib.h>

typedef int8_t int8;
typedef int16_t int16;
typedef int32_t int32;
typedef int64_t int64;
typedef int32 bool32;

typedef uint8_t uint8;
typedef uint16_t uint16;
typedef uint32_t uint32;
typedef uint64_t uint64;

#define internal static
#define global_variable static
#define local_persist static

#define Assert(Expression)			\
  if(!(Expression)) {*(int*)0 = 0;}

#define ArrayCount(Array) (sizeof(Array) / sizeof((Array)[0]))

typedef enum{
	     PSH = 0,
	     ADD,
	     POP,
	     SET,
	     HLT
} InstructionSet;

global_variable const int32[] Program = {
		       PSH, 5,
		       
		       PSH, 6,
		       ADD,
		       POP,
		       HLT
};


int main(void)
{
  
  
  return 0;
}
